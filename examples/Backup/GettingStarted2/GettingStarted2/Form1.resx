<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        CgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAQIDAQEJAgEBCgESAgEBFgESAgEBFwEKAgEBDAEDAgEBAhgAAQIDAQEH
        AgEBCAESAgECFgIBARwBEAIBARQBBwIBAQgBAgMBtAABBwIBAQcBHAIBASYBMgIBAU0BNgIBAVUBJwIB
        ATgBEgIBARYBBAIBAQQUAAEHAgEBCAEcAgEBJgEzAgEBTwE6AgEBXwEyAgEBTgEeAgEBKQEKAgEBCwEC
        AwEEAAECAwEBBwIBAQcBCwIBAQ0BCgIBAQsBBAIBAQSYAAEmAgEBNgFdAQQBBQHMAWABCQELAdoBVQIC
        AakBQwIBAXMBLwIBAUcBGAIBAR8BCwIBAQ0BCQIBAQoBCAIBAQkBBQIBAQUBAgMBASICAQEvAV0CAwHE
        AVoCDQHrAVwCAwHTAU0CAgGSATgCAQFbARoCAQEjAQUCAQEFAQMCAQECAQ0CAQEQASACAQIsAgEBQQEo
        AgEBOgEZAgEBIQEJAgEBCgECAwGQAAFGAgEBfAEQAaQB+gH/ASIB9QL/ATYBtQHAAf0BXAIDAcABRgIB
        AXwBNwIBAVgBKwIBAT8BKAIBAToBJQIBATQBGAIBAR8BBwIBAQcBVQICAakBhAFfAWUB/wGAAVgBXQH/
        AUgBPAFAAf8BVwEKAQwB6gFJAgIBhAEqAgEBPQEKAgEBDAEHAgEBCAE1AgEBUwFVAgIBqwFVAgIBqwFH
        AgEBfwE3AgEBWAEcAgEBJgEHAgEBB4wAAQQCAQEEAVoCAgG8AREBtQL/ASUB9gL/ASQB+wL/ASYB3QH0
        Af8BYAEGAQcB1AFTAgIBpAFSAgIBogFSAgIBogFIAgIBgAErAgEBPwENAgEBEAFdAgIBvQHrAZYBngH/
        Ad4BkAGWAf8BngFuAXUB/wFEAToBPQH/AVcCAgGxAS8CAQFHAQ4CAQERASsCAQE/AV4BGAEZAfIBWAFE
        AUgB/wE7ATUBOAH/AV4CCAHmAUsCAgGMAS8CAQFHAQ4CAQERiAABBQIBAQUBHAIBASUBXAETAR4B5gEV
        AcYC/wEjAe4C/wEiAe0C/wEjAfQC/wEkAesB/AH/AS8BvgHWAf4BJgHkAfcB/wEnAeIB9gH/AVwCAwHI
        ASwCAQFCAQwCAQEOAUkCAgGDAecBpgGqAf8B/QG6Ab0B/wHYAYkBkAH/AW0BTgFUAf8BVwICAbYBLwIB
        AUcBDgIBAREBRgIBAX0BugF+AYEB/wHHAYEBgwH/AZEBZwFuAf8BRgE7AT8B/wFcAgMByAE3AgEBWQEU
        AgEBGYAAAQIDAQEJAgEBCgEaAgEBIwFPAgIBlgEQAZoB9gH/ARkB0gL/ASAB5QL/ASAB5QL/ASEB6AL/
        ASEB7AL/ASIB8gL/ASMB9wL/ASQB6QH6Af8BVQICAaoBIgIBAS8BBgIBAQYBDQIBAQ8BVQICAacBuwJ/
        Af4BvAKBAf8BdwFVAVoB/wFSAgIBpQEsAgEBQQEQAgEBEwE8AgEBYgHZAZIBmAH/AfoBtAG3Af8B3wGQ
        AZYB/wGBAVwBYQH/AWACBAHcATgCAQFaARUCAQEbgAABBwIBAQgBIAIBASwBVQICAaoBHgGLAdIB/gET
        AcMC/wEcAdkC/wEdAdsC/wEdAd0C/wEfAeAC/wEgAeMC/wEgAeYC/wEhAe4C/wE+AW0BgwH4AUUCAQF5
        ARoCAQEiAQIDAQQAAQMCAQECASMCAQExAS0CAQFDAVkCAgG4AVMCAgGhASoCAQE+ARACAQETAQoCAQEM
        AVoCAgG8AeoBrAGvAf8B7AGbAaEB/wGWAWkBbwH/AVwCAwHTATQCAQFRARUCAQEbgAABIgIBAS8BXQEE
        AQUBzAEPAbMB+QH/ARMBxgL/ARkBzwL/ARoB0AL/ARoB0gL/ARsB1QL/ARwB2AL/AR0B2wL/AR4B3gL/
        AR4B5QL/AVsBEQEVAeMBPwIBAWsBHAIBASYBAwIBAQMQAAFTAgIBpgFSAgIBogEqAgEBPgEQAgEBEwQA
        AQ8CAQESAUUCAQF5AVICAgGfAVwCAwHGAVwCAwHIAS8CAQFHARUCAQEbgAABTQICAY8BDQHRAfsB/wEP
        AcsC/wEWAcAC/wEWAcMC/wEXAccC/wEYAcoC/wEZAc0C/wEaAdAC/wEbAdMC/wEcAdYC/wEcAd0C/wFV
        AScBMgHtAUYCAQF9AScCAQE4AQkCAQEKEAABVAICAacBUwICAaMBMQIBAUsBHQIBAScBDgIBAREBCgIB
        AQwBBgIBAQYBAwIBAQIBPAIBAWIBXAIDAcUBLQIBAUQBFQIBARuAAAEbAgEBJAFVAgIBqgElAYsBrgH7
        AQ4BygH+Af8BEgG/Av8BFAG9Av8BFQHBAv8BFgHEAv8BFwHIAv8BGAHKAv8BGQHNAv8BGQHUAv8BLwGq
        AcQB/QFRAgIBmwEtAgEBQwENAgEBEBAAAVQCAgGnAVMCAgGmAT8CAQFrATkCAQFcATACAQFJASoCAQE+
        ASQCAQEyARwCAQEmAUQCAQF3AV4CAwHKAS8CAQFIARUCAQEbiAABKAIBATsBWgICAb4BDwHMAfkB/wEQ
        Ab0C/wETAbcC/wEUAbwC/wEVAb4C/wEVAcIC/wEVAcgC/wEWAcwC/wEZAcgB/AH/AVYCAgGvASECAQEt
        AQoCAQELEAABUwICAaEBdAEeAR8B7wFhAgMBzgFaAgMBwQFVAgIBqwFNAgIBkwFGAgEBfAE/AgEBawFR
        AgIBnAFiAgMB1AE0AgEBUgEVAgEBG4wAAQgCAQEJAV4CBAHJAQ4B0QL/ARABrQL/AREBswL/ARABtwL/
        ARUBswH6Af8BVAEnATUB7QFcAQQBBQHLAVkCAgG4ATsCAQFhAQsCAQENAQMCAQEDEAABUgICAZ4B5QGL
        AZQB/wHLAYEBhgH/AbMBewGBAf8BmgFtAXQB/wF5AT8BQwH9AWABHgEfAfQBYAIIAeEBYAELAQwB6AFi
        AQQBBQHcATgCAQFaARUCAQEbkAABPwIBAWsBGAHZAfkB/wENAa8C/wEMAakC/wESAacB+AH/AVUCAgGu
        AR8CAQEqAQYCAQEGIAABUQICAZwB5gGMAZQB/wHSAYEBiQH/AcECgQH/AawBdwF+Af8BlwFrAXIB/wGB
        AV4BYwH/AWoBTwFTAf8BRwE8AUAB/wFfAgQB3QE4AgEBWwEUAgEBGpAAAR0CAQEnAVkBJwEuAesBEAHI
        Av8BEAGYAfcB/wFRAgIBngEVAgEBGwEEAgEBBCQAATQCAQFSAV4CAwHHAW0CEAHnAYsBRgFKAfoBowFy
        AXkB/wGVAWsBcQH/AYMBYQFnAf8BdAFTAVgB/wFSAUIBRgH/AV8CAwHSASwCAQFBARACAQETlAABQQIB
        AXABYAEMAQ8B3AFIAgIBgAENAgEBEAEEAgEBBCwAAQIDAQEKAgEBCwEfAgEBKwE0AgEBUgFHAgEBfgFT
        AgIBoQFeAgMByQFXAR4BHwH1AVYCAgGtARECAQEVAQYCAQEGgAABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEAAfABPwEBAf8EAAHwAR8BAAGDBAAB8AcAAfAHAAHgBwABwBEAAYAHAAHw
        AYAGAAHwBwAB8AUAAcABAAHwBQAB4AEAAfAFAAHwAQ8B8AUAAfABHwHwBQAB+AE/AfgFAAs=
</value>
  </data>
</root>