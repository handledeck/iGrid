<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADY
        CwAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAxIBGAMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMj
        ATMDEgEYDAADGAEiAyMBMwMjATMDGAEitAADTAGSAzwB/wM6Af8DOgH/AzoB/wM6Af8DOgH/AzoB/wM6
        Af8DOgH/AzwB/wNMAZIIAAMjATMBXwFaAVMBuQG/AXoBKwH/Ab8BegErAf8BXwFaAVMBuQMjATMDIwEz
        AyMBMwMjATMDIwEzAyMBMwMZASOYAAM8Af8BrwGtAakB/wGsAaoBpwH/Aa0BqwGoAf8BrgGrAagB/wGu
        AawBqAH/Aa4BqwGoAf8BrgGsAagB/wGtAasBpwH/Aa0BqwGoAf8BsAGtAaoB/wM8Af8IAAHBAXgBJgH/
        AcMBdwEhAf8BdwGgAcUB/wF3AaABxQH/AcMBdwEhAf8BwQF4ASYB/wHAAXgBJgH/AcABeAEmAf8BwAF4
        ASYB/wHAAXgBJwH/Ab8BeQEqAf8BYgFcAVQBwJgAAzoB/wGvAa0BqQH/AYMBgAF6Af8BNQIzAf8BhwGE
        AYEB/wE2ATQBMwH/AYcBhAGBAf8BNgE0ATMB/wGGAYMBgQH/ATMBMQEwAf8BsAGuAaoB/wM6Af8IAAFx
        AZkBuQH/AXABmAG2Af8BjQGiAbYB/wGOAaIBtgH/AXABmAG2Af8BbgGYAbgB/wFrAZYBtwH/AWkBlAG2
        Af8BaQGUAbYB/wFsAZYBuAH/AW4BmwHDAf8BxAF4ASkB/5gAAzoB/wGzAbEBrQH/ASwCKgH/AXYBdAFy
        Af8BMwExATAB/wF4AXYBdAH/ATMBMQEwAf8BeAF1AXMB/wExAi8B/wFyAXABbQH/AbMBsQGtAf8DOgH/
        CAABmAHAAdcB/wGtAcwB3QH/AdUB5gHsAf8BlAG5AdMB/wGlAcYB3AH/AboB0gHiAf8B7gH5Cv8B9QP/
        AaoBxwHlAf8B0QF0ASIB/wMjATOUAAE6ATkBOgH/AbYBswGwAf8BYwFfAV0B/wErAigB/wFrAWgBZgH/
        AS8CLgH/AW0BawFoAf8BLQEsASsB/wFpAWcBYwH/ASYBJQEiAf8BtwG1AbAB/wM6Af8IAAGgAckB4QH/
        AcEB4AHuAf8B5wH5AfsB/wGQAb8B2gH/AbEB0gHnAf8BzAHiAe8B/wHmAfEB+AX/AfoB/gL/AfIB/AL/
        Aa4BwQHeAf8BOgGBATEB/wEAAYwBRgH/AyMBM5AAAToCOQH/AboBtAGxAf8BVwFJAUsB/wFdAVABUQH/
        AV4CVwH/AQcCBgH/AQYBBwEFAf8BXQFbAVYB/wFbAVgBTgH/AVUBUwFIAf8BugG4AbAB/wE5AToBOQH/
        CAABnwHHAd8B/wHAAd8B7AH/AeYB9wH5Af8BjwG9AdkB/wGvAdAB5QH/AcoB4AHtAf8B5QHwAfcN/wHC
        AcUB5AH/AQABhAE5Af8BSgHUAagB/wEAAYgBQgH/AyMBM4wAAToCOQH/Ab8BtAGyAf8BAAHRAaQB/wEA
        AdcBqgH/AU0BQwFGAf8BXgFcAV0B/wFeAl0B/wFLAUoBQwH/AREBIAHxAf8BCwEaAeoB/wG9AbsBsAH/
        AzkB/wgAAZ8BxwHfAf8BvwHeAewB/wHlAfcB+QH/AY8BvQHZAf8BrwHQAeUB/wHKAeAB7QH/AeYB8QH4
        Bf8BRgGvAYMB/wEAAXkBLgH/AQABgQE0Af8BAAG4AXcB/wENAdwBqQH/AV4B0wGuAf8BAAGHAUAB/wMj
        ATOIAAM5Af8BvAK4Af8BLQElAS4B/wEwASoBNgH/AS0BLgE6Af8BKwEvATsB/wEqATABOwH/ASwBMQE5
        Af8BLgIyAf8BKwEuASsB/wK7AbYB/wM5Af8IAAGfAccB3wH/Ab8B3gHsAf8B5QH3AfkB/wGPAb0B2QH/
        Aa8B0AHlAf8BygHgAe0B/wHnAfEB+QX/AQABdwEsAf8BVAHmAccB/wEAAc8BnAH/AQABzQGbAf8BAAHM
        AZoB/wEOAdMBpwH/AW4B1wG5Af8BAAGKAUQB/4gAATcBOAE6Af8BtwG5Ab4B/wHzAZkBIAH/AfwBpwEp
        Av8BswErAv8BwAEsAv8BwgErAv8BtgEpAf8B/QGqAScB/wH1AZwBHQH/AbcBuQG9Af8BNwE4ATkB/wgA
        AZ8BxwHfAf8BvwHeAewB/wHlAfcB+QH/AY8BvQHZAf8BrwHQAeUB/wHKAeAB7QH/AecB8QH5Bf8BAAF4
        AS0B/wFmAeQB0AH/AVcB3gHFAf8BXAHdAcQB/wEAAcQBmQH/AQABxQGbAf8BgwHlAdIB/wEAAYoBQwH/
        iAABNgE4ATkB/wG2AboBwQH/AeYBkgEhAf8B6wGgATAB/wHxAa4BPQH/AfgBtQE9Af8B+QG3AUIB/wHz
        Aa0BNwH/Ae0BpgE5Af8B6wGeATEB/wG1AbgBvwH/ATYBNwE5Af8IAAGfAccB3wH/Ab8B3gHsAf8B5QH3
        AfkB/wGPAb0B2QH/Aa8B0AHlAf8BygHgAe0B/wHmAfEB+AX/AQoBlAFUAf8BAAGWAVQB/wEBAZgBVwH/
        AQkBuwGVAf8BAAG+AZsB/wGVAeUB1gH/ARcBlwFYAf+MAAE2ATgBOQH/AbkBvQHEAf8B4gGNASIB/wHm
        AZkBLQH/AewBpQE6Af8B8QGwAUgB/wHyAbYBVQH/AfMBugFhAf8B8AG8AW4B/wHzAbkBcAH/AbcBugG/
        Af8BNgE3ATkB/wgAAZ8BxwHfAf8BvwHeAewB/wHlAfcB+QH/AY8BvQHZAf8BrwHQAeUB/wHKAeAB7QH/
        AeUB8AH3Bf8B9AH5Af0B/wHzAfwC/wHGAdAB6QH/AQABhwE8Af8BngHnAeAB/wEaAZkBWgH/kAABNwE4
        ATkB/wHAAcIBxwH/AecBiwEhAf8B7AGXASwB/wHzAaIBNgH/AfgBrQFDAf8B+gGzAVEB/wH6AbgBXQH/
        AfkBuwFqAf8B+AG6AW4B/wG/AcABwgH/AjcBOQH/CAABnwHHAd8B/wG/Ad4B7AH/AeUB9wH5Af8BjwG9
        AdkB/wGvAdAB5QH/AcoB4AHtAf8B5AHwAfcF/wH7Af0C/wHvAfwC/wHAAdQB6wH/AQsBgwE1Af8BFwGd
        AWAB/5QAATgCOQH/AcoCyAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8ByQHHAcYB/wI4
        ATkB/wgAAZ8BxwHgAf8BwAHfAe0B/wHmAfgB+gH/AY8BvQHZAf8BsAHQAeUB/wHLAeEB7gH/AeYB8QH4
        Bf8B+gP/Ae8B/AL/AcAB1AHrAf8BxAFzASEB/5gAAzoB/wHQAc0BywH/Ac8BzQHLAf8B0gHPAc4B/wHS
        AdABzwH/AdIBzwHOAf8B0gHPAc4B/wHSAc8BzgH/AdEBzwHNAf8BzwHMAcsB/wHQAc0BygH/AzoB/wgA
        AZ8BygHiAf8BwQHiAfAB/wHjAfYB+QH/AZIBvwHbAf8BsQHTAegB/wHOAeUB8gH/AdwB6AHvAf8B5QHq
        Ae4B/wHNAdgB4gH/AccB2gHqAf8BwQHDAcEB/wGWAWoBRAHqmAADQwF3AzoB/wM5Af8DOQH/AzkB/wM5
        Af8DOQH/AzkB/wM5Af8DOQH/AzoB/wNDAXcIAAGnAbUBwQH/AaUBtAHAAf8CXAFdAbQBaAFqAWwBygGl
        AbQBwQH/AaQBswHAAf8DVQGkAzUBVwMhATCcAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AQABwAEDAYcB/wQAAcABAwEAAQ8EAAHAAQMBAAEPBAABwAEDAQABDwQAAcABAwEAAQcEAAHA
        AQMBAAEDBAABwAEDAQABAQQAAcABAwYAAcABAwYAAcABAwYAAcABAwEAAQEEAAHAAQMBAAEDBAABwAED
        AQABBwQAAcABAwEAAQ8EAAHAAQMBAAEPBAABwAEDAQABfwQACw==
</value>
  </data>
</root>